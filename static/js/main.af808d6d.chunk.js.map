{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignUp/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","HOME","Navigation","react_default","a","createElement","Link","to","ROUTES","Landing","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","then","authUser","setState","objectSpread","history","push","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","SignUpForm","withRouter","SignUpPage","SignInFormBase","SignInForm","compose","SignInPage","SignUp_SignUpLink","PasswordForget","Home","Account","Admin","App","BrowserRouter","components_Navigation","Route","exact","path","component","LandingPage","PasswordForgetPage","HomePage","AccountPage","AdminPage","ReactDOM","render","context","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af808d6d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => (\n  <div>\n    <ul>\n      <li>\n        <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.HOME}>Home</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </li>\n      <li>\n        <Link to={ROUTES.ADMIN}>Admin</Link>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Navigation;\n","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyCVHK2sUZ3xS56tkG1a3TdVi3sfVb9qbRs\",\n  authDomain: \"listzorg.firebaseapp.com\",\n  databaseURL: \"https://listzorg.firebaseio.com\",\n  projectId: \"listzorg\",\n  storageBucket: \"listzorg.appspot.com\",\n  messagingSenderId: \"1015340714773\",\n  appId: \"1:1015340714773:web:439bac938f95c8ea46771c\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from 'react';\n\nconst PasswordForget = () => (\n  <div>\n    <h1>PasswordForget</h1>\n  </div>\n);\n\nexport default PasswordForget;\n","import React from 'react';\n\nconst Home = () => (\n  <div>\n    <h1>Home</h1>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst Account = () => (\n  <div>\n    <h1>Account</h1>\n  </div>\n);\n\nexport default Account;\n","import React from 'react';\n\nconst Admin = () => (\n  <div>\n    <h1>Admin</h1>\n  </div>\n);\n\nexport default Admin;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  \n  <FirebaseContext.Provider value={new Firebase()}>\n    \n    <App />\n\n\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}